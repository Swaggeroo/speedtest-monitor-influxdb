name: Release and Build

on:
  push:
    branches:
      - master
    paths:
      - "version.txt"

jobs:
  bump-version:
    if: github.actor == 'renovate[bot]'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Fetch latest changes
        run: |
          git fetch origin
          git checkout ${{ github.head_ref }}
          git pull --rebase origin ${{ github.head_ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Read current version
        id: get_version
        run: |
          VERSION=$(cat version.txt)
          echo "Current version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Bump version inside PR
        run: |
          VERSION=${{ env.VERSION }}
          VERSION_PART=$(echo $VERSION | tr -d '[:space:]' | awk -F. '{print NF}')

           if [[ $VERSION_PART -eq 3 ]]; then
            IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
            PATCH=${VERSION_PARTS[2]}
            PATCH=$((PATCH + 1))
            NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH"
          fi

          echo "New version: $NEW_VERSION"
          echo $NEW_VERSION > version.txt
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit new version
        run: |
          git add -A
          git commit -m "chore: bump version to ${{ env.NEW_VERSION }} inside PR [skip ci]"
          git push origin ${{ github.head_ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-release:
    runs-on: ubuntu-latest
    needs: [ bump-version ]
    if: ${{ always() }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Read current version
        id: version
        run: |
          VERSION=$(cat version.txt)
          echo "Current version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create Git Tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: [ bump-version ]
    if: ${{ always() }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Read current version
        id: version
        run: |
          VERSION=$(cat version.txt)
          echo "Current version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
          echo "REPO_LC=${REPO,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'
          REPO: '${{ github.event.repository.name }}'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io  # or docker.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io  # Docker Hub
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Multi-Arch Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/${{ env.REPO_LC }}:${{ env.VERSION }}
            ghcr.io/${{ env.OWNER_LC }}/${{ env.REPO_LC }}:latest
            docker.io/${{ secrets.DOCKER_USERNAME }}/${{ env.REPO_LC }}:${{ env.VERSION }}
            docker.io/${{ secrets.DOCKER_USERNAME }}/${{ env.REPO_LC }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.version=${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
